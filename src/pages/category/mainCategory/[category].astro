---
import Layout from '../../../layouts/Layout.astro';
import CardProducts from '../../../components/CardProducts.astro';
import Carousel from '../../../components/Carousel.astro';
import { supabase } from '../../../lib/supabaseClient';

const { category } = Astro.params;

const { data: categoryData, error: errorCategory } = await supabase
  .from('categories')
  .select('*')
  .eq('name', category)
  .single();

if (!categoryData) {
  console.error('Categoría no encontrada:', errorCategory);
}

const { data:subcategoryData, error: errorSubcategory } = await supabase
  .from('categories')
  .select('*')
  .eq('parent_id', categoryData.category_id);

if (errorSubcategory) {
  console.error('Error al obtener subcategorías:', errorSubcategory);
}

const { data: products, error: errorProducts } = await supabase
  .from('products')
  .select('*')
  .in('category_id', subcategoryData.map(sub => sub.category_id));

if (errorProducts) {
  console.error('Error al obtener productos:', errorProducts);
}

---

<Layout>
  <h1 class="text-4xl font-bold m-5">{categoryData.name}</h1>


  {subcategoryData?.map(subcategory => {
    const productSubcategory = products?.filter(product => product.category_id === subcategory.category_id);

    return(
      <Carousel title={subcategory.name}>
        { productSubcategory?.map(product => (
          <CardProducts
          product = { product }
          />
        ))}
      </Carousel>
    )
  })}
</Layout>

